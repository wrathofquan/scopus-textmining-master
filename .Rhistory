library(ggthemes)
library(gridExtra)
#read in instruction stats sheet
gs_ls()
raw <- gs_url("https://docs.google.com/spreadsheets/d/1yg5lNLXUm7Upiz76a8QgyASyWJrUdRxcm9R_JwmyGA0/")
raw <- raw %>%
gs_read(ws = "Form Responses 1")
#renames variables for easier typing
raw <- rename(raw, timestamp = `Timestamp`,
lastname = `Your Last Name`,
type = `Type of interaction`,
date = `Date`,
course = `Course Information`,
faculty = `Faculty Name`,
patron = `Patron Type`,
attendees = `Number of Attendees*`,
location = `Location`,
delivery = `Delivery Mode`,
time = `Time Spent`,
notes = `Notes (can include learning goals, location of instructional materials, co-presenters etc.)`,
copresenters = `Copresenters`)
# to look at individuals
raw1 <- filter(raw, lastname == "Quan" )
raw4 <- raw1 %>% separate(course, into = c("course","course2"),  sep = "\\-", extra = "merge")
course_sum <- as.data.frame(table(raw4$course))
#splitting and combining some unique courses with different separators
course_sum <- separate(course_sum, Var1, into = c("a","b", "c"), sep = " ", extra = "merge")
course_sum <- unite(course_sum, course, a, b, sep = " ")
course_sum <- course_sum %>%
rename(count = Freq) %>%
arrange(desc(count))  %>%
top_n(20)
#reorder the factors, so that they appear as ascending in chart
p3 <- ggplot(data=course_sum, aes(x=reorder(course, count), y = count)) +
geom_bar(stat= "identity") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Course titles by count")+ scale_x_discrete(name="")
p3
library(tidytext)
w<-count(raw, notes)
View(w)
w <- w %>%
na.omit() %>%
unnest_tokens(notes, n) %>%
count(notes, n, sort = TRUE) %>%
anti_join(stop_words) %>%
ungroup()
class(w)
class(w$notes)
w <- w %>%
na.omit() %>%
unnest_tokens(notes) %>%
count(notes, sort = TRUE) %>%
anti_join(stop_words) %>%
ungroup()
w <- w %>%
na.omit() %>%
unnest_tokens(notes,notes) %>%
count(notes,notes sort = TRUE) %>%
anti_join(stop_words) %>%
ungroup()
View(scopus1)
scopus1 <- scopus %>%
na.omit() %>%
unnest_tokens(word, Title) %>%
count(word, sort = TRUE) %>%
filter(Year != 2017)%>%
anti_join(stop_words) %>%
ungroup()
w <- w %>%
na.omit() %>%
unnest_tokens(word, Title) %>%
count(word, sort = TRUE) %>%
anti_join(stop_words) %>%
ungroup()
unnest_tokens()
?unnest_tokens()
w <- w %>%
na.omit() %>%
unnest_tokens(notes, notes1) %>%
count(notes1, sort = TRUE) %>%
anti_join(stop_words) %>%
ungroup()
View(raw)
w <- w %>%
na.omit() %>%
unnest_tokens(notes, notes1) %>%
count(notes, sort = TRUE) %>%
anti_join(stop_words) %>%
ungroup()
w <- w %>%
na.omit() %>%
unnest_tokens(w,notes, notes1) %>%
count(notes, sort = TRUE) %>%
anti_join(stop_words) %>%
ungroup()
w <- w %>%
na.omit() %>%
unnest_tokens(w,notes1, notes) %>%
count(notes, sort = TRUE) %>%
anti_join(stop_words) %>%
ungroup()
w <- w %>%
na.omit() %>%
unnest_tokens(w,notes1, notes) %>%
count(notes1, sort = TRUE) %>%
anti_join(stop_words) %>%
ungroup()
w <- w %>%
na.omit() %>%
unnest_tokens(notes1, notes) %>%
count(notes1, sort = TRUE) %>%
anti_join(stop_words) %>%
ungroup()
library(tidyverse)
library(googlesheets)
library(ggthemes)
library(gridExtra)
library(tidytext)
#read in instruction stats sheet
gs_ls()
raw <- gs_url("https://docs.google.com/spreadsheets/d/1yg5lNLXUm7Upiz76a8QgyASyWJrUdRxcm9R_JwmyGA0/")
raw <- raw %>%
gs_read(ws = "Form Responses 1")
#renames variables for easier typing
raw <- rename(raw, timestamp = `Timestamp`,
lastname = `Your Last Name`,
type = `Type of interaction`,
date = `Date`,
course = `Course Information`,
faculty = `Faculty Name`,
patron = `Patron Type`,
attendees = `Number of Attendees*`,
location = `Location`,
delivery = `Delivery Mode`,
time = `Time Spent`,
notes = `Notes (can include learning goals, location of instructional materials, co-presenters etc.)`,
copresenters = `Copresenters`)
# to look at individuals
raw1 <- filter(raw, lastname == "Chen" )
raw1$date <- as.Date(raw1$date, "%m/%d/%Y")
p1 <- ggplot(raw1, aes(date)) +
geom_histogram(binwidth = 10, stat = "bin", alpha = .2) +
geom_density(stat = "bin", binwidth = 10)+
theme_tufte(base_size = 11, base_family = "serif", ticks = TRUE) +
ggtitle("Entries over time")
library(tidyverse)
library(googlesheets)
library(ggthemes)
library(gridExtra)
library(tidytext)
#read in instruction stats sheet
gs_ls()
raw <- gs_url("https://docs.google.com/spreadsheets/d/1yg5lNLXUm7Upiz76a8QgyASyWJrUdRxcm9R_JwmyGA0/")
raw <- raw %>%
gs_read(ws = "Form Responses 1")
#renames variables for easier typing
raw <- rename(raw, timestamp = `Timestamp`,
lastname = `Your Last Name`,
type = `Type of interaction`,
date = `Date`,
course = `Course Information`,
faculty = `Faculty Name`,
patron = `Patron Type`,
attendees = `Number of Attendees*`,
location = `Location`,
delivery = `Delivery Mode`,
time = `Time Spent`,
notes = `Notes (can include learning goals, location of instructional materials, co-presenters etc.)`,
copresenters = `Copresenters`)
# to look at individuals
raw1 <- filter(raw, lastname == "Chen" )
raw1$date <- as.Date(raw1$date, "%m/%d/%Y")
p1 <- ggplot(raw1, aes(date)) +
geom_histogram(binwidth = 10, stat = "bin", alpha = .2) +
geom_density(stat = "bin", binwidth = 10)+
theme_tufte(base_size = 11, base_family = "serif", ticks = TRUE) +
ggtitle("Entries over time")
p1
raw1$type <- factor(raw1$type, levels=names(sort(table(raw1$type), increasing=TRUE)))
p2 <- ggplot(raw1, aes(type)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Interaction type")+ scale_x_discrete(name="")
raw3 <- count(raw2, dept) %>% filter(!is.na(dept))
raw3 <- arrange(raw3,desc(n))
#plot of most worked with departments
p3 <- ggplot(data = raw3, aes(reorder(dept, n), n)) + geom_bar(stat = "identity") + coord_flip() +
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) + scale_x_discrete(name="department")
raw3 <- count(raw2, dept) %>% filter(!is.na(dept))
raw3 <- arrange(raw3,desc(n))
raw2 <- raw1 %>% separate(course, into = c("dept","course2", "course3"),  sep = " ", extra = "drop")
raw3 <- count(raw2, dept) %>% filter(!is.na(dept))
raw3 <- arrange(raw3,desc(n))
trend <- ggplot(raw1, aes(date)) +
geom_histogram(binwidth = 10, stat = "bin", alpha = .2) +
geom_density(stat = "bin", binwidth = 10)+
theme_tufte(base_size = 11, base_family = "serif", ticks = TRUE) +
ggtitle("Entries over time")
library(tidyverse)
library(googlesheets)
library(ggthemes)
library(gridExtra)
library(tidytext)
#read in instruction stats sheet
gs_ls()
raw <- gs_url("https://docs.google.com/spreadsheets/d/1yg5lNLXUm7Upiz76a8QgyASyWJrUdRxcm9R_JwmyGA0/")
raw <- raw %>%
gs_read(ws = "Form Responses 1")
raw <- rename(raw, timestamp = `Timestamp`,
lastname = `Your Last Name`,
type = `Type of interaction`,
date = `Date`,
course = `Course Information`,
faculty = `Faculty Name`,
patron = `Patron Type`,
attendees = `Number of Attendees*`,
location = `Location`,
delivery = `Delivery Mode`,
time = `Time Spent`,
notes = `Notes (can include learning goals, location of instructional materials, co-presenters etc.)`,
copresenters = `Copresenters`)
# to look at individuals
raw1 <- filter(raw, lastname == "Chen" )
raw1$date <- as.Date(raw1$date, "%m/%d/%Y")
trend <- ggplot(raw1, aes(date)) +
geom_histogram(binwidth = 10, stat = "bin", alpha = .2) +
geom_density(stat = "bin", binwidth = 10)+
theme_tufte(base_size = 11, base_family = "serif", ticks = TRUE) +
ggtitle("Entries over time")
raw1$type <- factor(raw1$type, levels=names(sort(table(raw1$type), increasing=TRUE)))
interaction <- ggplot(raw1, aes(type)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Interaction type")+ scale_x_discrete(name="")
interaction
raw2 <- raw1 %>% separate(course, into = c("dept","course2", "course3"),  sep = " ", extra = "drop")
#create new data.frame with just department and count
raw3 <- count(raw2, dept) %>% filter(!is.na(dept))
raw3 <- arrange(raw3,desc(n))
#plot of most worked with departments
departments <- ggplot(data = raw3, aes(reorder(dept, n), n)) + geom_bar(stat = "identity") + coord_flip() +
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) + scale_x_discrete(name="department")
departments
raw4 <- raw1 %>% separate(course, into = c("course","course2"),  sep = "\\-", extra = "merge")
course_sum <- as.data.frame(table(raw4$course))
#splitting and combining some unique courses with different separators
course_sum <- separate(course_sum, Var1, into = c("a","b", "c"), sep = " ", extra = "merge")
course_sum <- unite(course_sum, course, a, b, sep = " ")
course_sum <- course_sum %>%
rename(count = Freq) %>%
arrange(desc(count))  %>%
top_n(20)
#reorder the factors, so that they appear as ascending in chart
course <- ggplot(data=course_sum, aes(x=reorder(course, count), y = count)) +
geom_bar(stat= "identity") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Course titles by count")+ scale_x_discrete(name="")
course
raw1$type <- factor(raw1$type, levels=names(sort(table(raw1$type), increasing=TRUE)))
interaction1 <- ggplot(data= subset(raw1, !is.na(course)), aes(x=type)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE)
ggtitle("")+ scale_x_discrete(name="")
interaction1
raw1$type <- factor(raw1$type, levels=names(sort(table(raw1$type), increasing=TRUE)))
interaction1 <- ggplot(data= subset(raw1, !is.na(course)), aes(x=type)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE)
ggtitle("")+ scale_x_discrete(name="")
interaction1 <- ggplot(data= subset(raw1, !is.na(course)), aes(x=type)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE)
ggtitle("")+ scale_x_discrete(name="")
interaction1 <- ggplot(data= subset(raw1, !is.na(course)), aes(x=type)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE)
ggtitle("")+ scale_x_discrete(name = "")
faculty <- as.data.frame(table(raw1$faculty))
faculty <- faculty %>%
rename(faculty = Var1, count = Freq) %>%
arrange(desc(count))  %>%
top_n(20)
faculty <- ggplot(data= faculty, aes(x= reorder(faculty,count), y= count)) +
geom_bar(stat= "identity") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Instructor names")+ scale_x_discrete(name="")
faculty
raw1$patron <- factor(raw1$patron, levels=names(sort(table(raw1$patron), increasing=TRUE)))
patron <- ggplot(data= raw1, aes(x= patron)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Patron type")+ scale_x_discrete(name="")
patron
raw1$location <- factor(raw1$location, levels=names(sort(table(raw1$location), increasing=TRUE)))
location <- ggplot(data= raw1, aes(x=location)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Location")+ scale_x_discrete(name="")
location
delivery <- ggplot(data= raw1, aes(x=delivery)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Delivery mode")+ scale_x_discrete(name="")
raw1$time <- factor(raw1$time, levels=names(sort(table(raw1$time), increasing=TRUE)))
time <- ggplot(data= raw1, aes(x=time)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Time")+ scale_x_discrete(name="")
trend <- ggplot(raw1, aes(date)) +
geom_histogram(binwidth = 10, stat = "bin", alpha = .2) +
geom_density(stat = "bin", binwidth = 10)+
theme_tufte(base_size = 11, base_family = "serif", ticks = TRUE) +
ggtitle("Entries over time- Chao Chen")
b <- grid.arrange(department, course)
department
b <- grid.arrange(departments, course)
b
b <- grid.arrange(departments, course, nrow = 2)
b
b <- grid.arrange(departments, course, nrow = 1)
b
a <- grid.arrange(trend, delivery, interaction, interaction1, patron,  nrow = 5)
a
a <- grid.arrange(trend, delivery, interaction, patron,  nrow = 5)
a
a <- grid.arrange(trend, delivery, interaction, patron,  nrow = 3)
a
a <- grid.arrange(trend, delivery, interaction, patron, location  nrow = 3)
a <- grid.arrange(trend, delivery, interaction, patron, location,  nrow = 3)
a
b <- grid.arrange(departments, course, nrow = 1)
a <- grid.arrange(trend, time, interaction, patron, location,  nrow = 3)
c <- faculty
c
a
a
a
a <- grid.arrange(trend, time, interaction, patron, location,  nrow = 3)
a
a <- grid.arrange(trend, time, interaction, patron, location, delivery  nrow = 3)
a <- grid.arrange(trend, time, interaction, patron, location, delivery,  nrow = 3)
b <- grid.arrange(departments, course, nrow = 1)
c <- faculty
a <- grid.arrange(trend, time, interaction, patron, location, delivery,  nrow = 3)
a
raw1$time <- factor(raw1$time, levels=names(sort(table(raw1$time), increasing=TRUE)))
time <- ggplot(data= raw1, aes(x=time)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Time")+ scale_x_discrete(name="") +
scale_y_discrete(name="")
delivery <- ggplot(data= raw1, aes(x=delivery)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Delivery mode")+ scale_x_discrete(name="") +
scale_y_discrete(name="")
raw1$location <- factor(raw1$location, levels=names(sort(table(raw1$location), increasing=TRUE)))
location <- ggplot(data= raw1, aes(x=location)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Location")+ scale_x_discrete(name="") +
scale_y_discrete(name="")
raw1$patron <- factor(raw1$patron, levels=names(sort(table(raw1$patron), increasing=TRUE)))
patron <- ggplot(data= raw1, aes(x= patron)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Patron type")+ scale_x_discrete(name="") +
scale_y_discrete(name="")
raw1$type <- factor(raw1$type, levels=names(sort(table(raw1$type), increasing=TRUE)))
interaction1 <- ggplot(data= subset(raw1, !is.na(course)), aes(x=type)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE)
ggtitle("")+ scale_x_discrete(name = "") +
scale_y_discrete(name="")
raw1$type <- factor(raw1$type, levels=names(sort(table(raw1$type), increasing=TRUE)))
interaction <- ggplot(raw1, aes(type)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Interaction type")+ scale_x_discrete(name="") +
scale_y_discrete(name="")
a <- grid.arrange(trend, time, interaction, patron, location, delivery,  nrow = 3)
raw1$date <- as.Date(raw1$date, "%m/%d/%Y")
trend <- ggplot(raw1, aes(date)) +
geom_histogram(binwidth = 10, stat = "bin", alpha = .2) +
geom_density(stat = "bin", binwidth = 10)+
theme_tufte(base_size = 11, base_family = "serif", ticks = TRUE) +
ggtitle("Entries over time- Chao Chen")
raw1$type <- factor(raw1$type, levels=names(sort(table(raw1$type), increasing=TRUE)))
interaction <- ggplot(raw1, aes(type)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Interaction type")+ scale_x_discrete(name="")
raw1$type <- factor(raw1$type, levels=names(sort(table(raw1$type), increasing=TRUE)))
interaction1 <- ggplot(data= subset(raw1, !is.na(course)), aes(x=type)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE)
ggtitle("")+ scale_x_discrete(name = "")
raw1$patron <- factor(raw1$patron, levels=names(sort(table(raw1$patron), increasing=TRUE)))
patron <- ggplot(data= raw1, aes(x= patron)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Patron type")+ scale_x_discrete(name="")
raw1$location <- factor(raw1$location, levels=names(sort(table(raw1$location), increasing=TRUE)))
location <- ggplot(data= raw1, aes(x=location)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Location")+ scale_x_discrete(name="")
delivery <- ggplot(data= raw1, aes(x=delivery)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Delivery mode")+ scale_x_discrete(name="")
raw1$time <- factor(raw1$time, levels=names(sort(table(raw1$time), increasing=TRUE)))
time <- ggplot(data= raw1, aes(x=time)) +
geom_bar(stat = "count") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Time")+ scale_x_discrete(name="")
a <- grid.arrange(trend, time, interaction, patron, location, delivery,  nrow = 3)
raw1$date <- as.Date(raw1$date, "%m/%d/%Y")
trend <- ggplot(raw1, aes(date)) +
geom_histogram(binwidth = 10, stat = "bin", alpha = .2) +
geom_density(stat = "bin", binwidth = 10)+
theme_tufte(base_size = 11, base_family = "serif", ticks = TRUE) +
ggtitle("Interactions over time, Chao Chen")
a <- grid.arrange(trend, time, interaction, patron, location, delivery,  nrow = 3)
a
b
b
b <- grid.arrange(departments, course, nrow = 1)
#plot of most worked with departments
departments <- ggplot(data = raw3, aes(reorder(dept, n), n)) + geom_bar(stat = "identity") + coord_flip() +
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) + scale_x_discrete(name="department") +
ggtitle("Departments by Count")
departments <- ggplot(data = raw3, aes(reorder(dept, n), n)) + geom_bar(stat = "identity") + coord_flip() +
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) + scale_x_discrete(name="department") +
ggtitle("Departments by Count")
b <- grid.arrange(departments, course, nrow = 1)
c <- faculty
faculty <- ggplot(data= faculty, aes(x= reorder(faculty,count), y= count)) +
geom_bar(stat= "identity") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Instructor by Count")+ scale_x_discrete(name="")
faculty <- as.data.frame(table(raw1$faculty))
faculty <- faculty %>%
rename(faculty = Var1, count = Freq) %>%
arrange(desc(count))  %>%
top_n(20)
faculty <- ggplot(data= faculty, aes(x= reorder(faculty,count), y= count)) +
geom_bar(stat= "identity") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Instructor by Count")+ scale_x_discrete(name="")
c <- faculty
c
faculty <- as.data.frame(table(raw1$faculty))
faculty <- faculty %>%
rename(faculty = Var1, count = Freq) %>%
arrange(desc(count))  %>%
top_n(40)
faculty <- ggplot(data= faculty, aes(x= reorder(faculty,count), y= count)) +
geom_bar(stat= "identity") +
coord_flip()+
theme_tufte(base_size = 11, base_family = "serif", ticks = FALSE) +
ggtitle("Instructor by Count")+ scale_x_discrete(name="")
c <- faculty
c
a <- grid.arrange(trend, time, interaction, patron, location, delivery,  nrow = 4)
a <- grid.arrange(trend, time, interaction, patron, location, delivery,  nrow = 2)
shiny::runApp('C:/Users/jquan01/Downloads')
install.packages("swirl")
library(swirl)
swirl()
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
play()
swirl()
swirl()
swirl()
swirl()
swirl()
